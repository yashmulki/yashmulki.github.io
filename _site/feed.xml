<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-05-30T11:58:51-04:00</updated><id>/feed.xml</id><title type="html">Yash Mulki</title><subtitle>soft eng @ uwaterloo, swe intern @ apple</subtitle><entry><title type="html">Generative Adversarial Networks</title><link href="/ml/papers/2021/05/29/generative-adversarial-networks.html" rel="alternate" type="text/html" title="Generative Adversarial Networks" /><published>2021-05-29T08:13:33-04:00</published><updated>2021-05-29T08:13:33-04:00</updated><id>/ml/papers/2021/05/29/generative-adversarial-networks</id><content type="html" xml:base="/ml/papers/2021/05/29/generative-adversarial-networks.html">&lt;p&gt;A deep dive into GANs going step by step through the &lt;a href=&quot;https://arxiv.org/pdf/1406.2661.pdf&quot;&gt;paper&lt;/a&gt;.
We’ll also explore how to implement this paper in python using the PyTorch framework&lt;/p&gt;</content><author><name></name></author><category term="ml" /><category term="papers" /><summary type="html">A deep dive into GANs going step by step through the paper. We’ll also explore how to implement this paper in python using the PyTorch framework</summary></entry><entry><title type="html">Merge K Sorted Lists</title><link href="/problems/2021/05/29/merge-k-sorted-lists.html" rel="alternate" type="text/html" title="Merge K Sorted Lists" /><published>2021-05-29T08:13:33-04:00</published><updated>2021-05-29T08:13:33-04:00</updated><id>/problems/2021/05/29/merge-k-sorted-lists</id><content type="html" xml:base="/problems/2021/05/29/merge-k-sorted-lists.html">&lt;h3 id=&quot;problem-overview&quot;&gt;Problem Overview&lt;/h3&gt;

&lt;p&gt;An interesting leetcode problem. &lt;a href=&quot;https://leetcode.com/problems/merge-k-sorted-lists/&quot;&gt;(link)&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.
Merge all the linked-lists into one sorted linked-list and return it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Constraints and examples available in the linked page&lt;/p&gt;

&lt;h3 id=&quot;thought-process&quot;&gt;Thought Process&lt;/h3&gt;

&lt;h3 id=&quot;code-implementation&quot;&gt;Code Implementation&lt;/h3&gt;

&lt;h3 id=&quot;runtime-analysis&quot;&gt;Runtime Analysis&lt;/h3&gt;

&lt;h3 id=&quot;learnings&quot;&gt;Learnings&lt;/h3&gt;</content><author><name></name></author><category term="problems" /><summary type="html">Problem Overview</summary></entry></feed>